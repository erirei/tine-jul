{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","giftOpen","setGiftOpen","today","Date","now","christmas","diffDays","Math","round","abs","getTime","className","style","marginTop","onClick","setTimeout","elmnt","document","getElementById","scrollIntoView","behavior","width","id","transform","src","marginBottom","marginLeft","whiteSpace","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"0NAqFeA,MAhFf,WAAgB,IAAD,EACmBC,oBAAkB,GADrC,mBACNC,EADM,KACIC,EADJ,KAEPC,EAAQ,IAAIC,KAAKA,KAAKC,OACtBC,EAAY,IAAIF,KAAK,cAErBG,EAAWC,KAAKC,MACpBD,KAAKE,KAAKP,EAAMQ,UAAYL,EAAUK,WAFzB,QAIf,OAAIJ,EAAW,EAEX,qBAAKK,UAAU,MAAf,SACE,qBAAIC,MAAO,CAAEC,UAAW,QAAxB,UACGP,EAAW,EADd,4BAOJ,sBAAKK,UAAU,MAAf,UACE,qBAAKA,UAAU,cACf,gDACA,wBACEG,QAAS,WACPb,GAAY,GACZc,YAAW,WACT,IAAIC,EAAQC,SAASC,eAAe,cAC/B,OAALF,QAAK,IAALA,KAAOG,eAAe,CACpBC,SAAU,aAEX,MARP,sBAcA,sBAAKT,UAAS,UAAKX,EAAW,OAAS,WAAvC,UACE,qBACEqB,MAAO,QACPC,GAAI,aACJV,MAAO,CACLW,UAAW,gBACXV,UAAW,QAEbW,IAAI,iBAEN,qBACEH,MAAO,QACPT,MAAO,CACLW,UAAW,iBACXE,aAAc,OACdC,WAAY,QAEdF,IAAI,qBAEN,2EACoC,IAClC,sBAAMZ,MAAO,CAAEe,WAAY,UAA3B,qBAFF,8GAKE,uBACA,uBANF,6BASA,mBAAGf,MAAO,CAAEa,aAAc,QAA1B,oFAGA,qBACEJ,MAAO,QACPT,MAAO,CACLW,UAAW,gBACXK,OAAQ,OACRH,aAAc,QAEhBD,IAAI,4BChECK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASC,eAAe,SAM1BW,M","file":"static/js/main.acc27ea5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.scss\";\n\nimport \"./ChristmasTree.scss\";\n\nfunction App() {\n  const [giftOpen, setGiftOpen] = useState<boolean>(false);\n  const today = new Date(Date.now());\n  const christmas = new Date(\"2020-12-24\");\n  const oneDay = 24 * 60 * 60 * 1000;\n  const diffDays = Math.round(\n    Math.abs((today.getTime() - christmas.getTime()) / oneDay)\n  );\n  if (diffDays > 0) {\n    return (\n      <div className=\"App\">\n        <h1 style={{ marginTop: \"5rem\" }}>\n          {diffDays + 1} dager igjen til jul\n        </h1>\n      </div>\n    );\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"christmas\"></div>\n      <h1>Kjære Tine!</h1>\n      <button\n        onClick={() => {\n          setGiftOpen(true);\n          setTimeout(() => {\n            var elmnt = document.getElementById(\"firstImage\");\n            elmnt?.scrollIntoView({\n              behavior: \"smooth\",\n            });\n          }, 100);\n        }}\n      >\n        Pakk opp\n      </button>\n\n      <div className={`${giftOpen ? \"show\" : \"no-show\"}`}>\n        <img\n          width={\"300px\"}\n          id={\"firstImage\"}\n          style={{\n            transform: \"rotate(10deg)\",\n            marginTop: \"5rem\",\n          }}\n          src=\"./ossTre.jpg\"\n        />\n        <img\n          width={\"300px\"}\n          style={{\n            transform: \"rotate(-10deg)\",\n            marginBottom: \"2rem\",\n            marginLeft: \"auto\",\n          }}\n          src=\"./fyrverkeri.jpg\"\n        />\n        <p>\n          I år får du av oss et gavekort på{\" \"}\n          <span style={{ whiteSpace: \"nowrap\" }}>1 000,-</span> kroner til å\n          bruke på TV møbel, stuebord, vinkurs, spatur, eller en hvilken som\n          helst opplevelse.\n          <br />\n          <br />\n          Vi er kjempeglad i deg!\n        </p>\n        <p style={{ marginBottom: \"3rem\" }}>\n          Kjærlig hilsen Erik, Jørgen, Maja, Terje og Vincent &#x1f43e;\n        </p>\n        <img\n          width={\"300px\"}\n          style={{\n            transform: \"rotate(-4deg)\",\n            margin: \"auto\",\n            marginBottom: \"5rem\",\n          }}\n          src=\"./alleSammen.jpg\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}